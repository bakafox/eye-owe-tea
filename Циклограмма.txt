Циклограмма — это способ проектирования работы программы на основе описания состояния. Как правило, циклограммы предполагают полную линейность и полное отсутствие ветвления, чтобы в любой взятый момент времени программе точно соответствовало одно из известных состояний.


Например, циклограмма режима работы двух светофоров на перекрёстке:

№ СОСТ-Я | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 |
---------+---+---+---+---+---+---+---+---+---+----+----+----+----+----+----+----+
ДЛИТ., С | 6 | 1 | 1 | 1 | 1 | 1 | 1 | 3 | 6 | 1  | 1  | 1  | 1  | 1  | 1  | 3  |
=========+=======================================================================
СВЕ- | к |   |   |   |   |   |   |   |   | √ | √  | √  | √  | √  | √  | √  | √  |
ТОФ- | ж |   |   |   |   |   |   |   | √ |   |    |    |    |    |    |    | √  |
ОР 1 | з | √ |   | √ |   | √ |   | √ |   |   |    |    |    |    |    |    |    |
-----+---+---+---+---+---+---+---+---+---+---+----+----+----+----+----+----+----+
СВЕ- | к | √ | √ | √ | √ | √ | √ | √ | √ |   |    |    |    |    |    |    |    |
ТОФ- | ж |   |   |   |   |   |   |   | √ |   |    |    |    |    |    |    | √  |
ОР 2 | з |   |   |   |   |   |   |   |   | √ |    | √  |    | √  |    | √  |    |


Соответствующая этой таблице структура данных может выглядить, например, так:

struct Светофор {
    bool к;
    bool ж;
    bool з;
};

struct Состояние {
    std::vector<Светофор> активные_огни_светофора;
    int длительность_состояния;
};

typedef std::vector<Состояние> Режим;

std::vector<Режим> циклограмма;
